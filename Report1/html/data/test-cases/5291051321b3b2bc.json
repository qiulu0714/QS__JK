{
  "uid" : "5291051321b3b2bc",
  "name" : "test_login",
  "fullName" : "TestQS.configure_device.test_configure_device.Test_info#test_login",
  "historyId" : "12bd2cc53989914a650992d09ee0b597",
  "time" : {
    "start" : 1608269057182,
    "stop" : 1608269057295,
    "duration" : 113
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'list'",
  "statusTrace" : "self = <TestQS.configure_device.test_configure_device.Test_info object at 0x043A1830>\n\n    @allure.severity(\"critical\")\n    @allure.story(\"用户登录\")\n    def test_login(self):\n        login_resp = request.post_request(url=url1 + '/api/user/public/pwd/login',\n                                          json={\"subject\": \"13800010001\", \"password\": \"123456\"})\n    \n        # 通过状态码进行判断\n        assertions.assert_code(login_resp.status_code, 200)\n    \n        # 提取响应正文\n        login_resp_json = login_resp.json()\n    \n        # 通过响应正文进行对比判断\n        assertions.assert_in_text(login_resp_json['resMsg'], 'success')\n    \n        # 提取token\n        data_json = login_resp_json['data']\n        # # 重新赋值全局变量 head\n        global head\n        head = {'console-token': data_json['consoleToken']}\n    \n    # @allure.severity(\"critical\")\n    # @allure.story(\"添加设备\")\n    # def test_add_device(self):\n    #     # 需重构\n    #     \"\"\"\n    #     add_device_resp = request.post_request(url=url1 + '/api/device/console/device/info/add',\n    #                                       json ={\"enteId\":32,\"deptId\":98,\"address\":\"沈杜公路1000弄\",\n    #                                              \"appVersion\":\"3.0\",\"batchCode\":\"2020-11\",\"provinceId\":9,\n    #                                              \"cityId\":104,\"countyId\":1134,\"townId\":13787,\n    #                                              \"centerId\":1000022,\"communityId\":3000007,\n    #                                              \"deviceVersion\":\"1.0\",\"emergencyContactUserId\":351,\n    #                                              \"gasNumber\":\"123456\",\"lat\":39.910925,\"lon\":116.413384,\n    #                                              \"macCode\":maccode,\"netType\":\"1,2,3\",\"remark\":\"\",\"romVersion\":\"1\",\n    #                                              \"title\":title,\"phone\":\"17323926305\",\"time\":\"2020-11-23 00:00:00\",\n    #                                              \"villageName\":\"中金海棠湾居委会\"},headers=head)\n    #\n    #     assertions.assert_code(add_device_resp.status_code,200)\n    #\n    #     add_device_resp_json = add_device_resp.json()\n    #\n    #     assertions.assert_in_text(add_device_resp_json['resMsg'],'success')\n    #     \"\"\"\n    #\n        # 将携带的参数传给params\n        a = {\"page\" : 1 , \"size\" : 10 , \"fuzzy\" : title}\n    \n        query_device_info_resp = request.get_request(url=url1 +\"/api/device/console/device/info/query/CombinationQuery\",\n                                                    params= a, headers=head)\n        # 通过状态码进行判断\n        assertions.assert_code(query_device_info_resp.status_code,200)\n    \n        # 提取响应正文\n        query_device_info_resp_json = query_device_info_resp.json()\n    \n        # 通过响应正文进行对比判断\n        assertions.assert_in_text(query_device_info_resp_json['resMsg'],'success')\n    \n        # 获取josn中data\n        query_device_info_resp_json_data = query_device_info_resp_json['data']\n    \n        # 获取data中的list\n>       query_device_info_resp_json_data_list = query_device_info_resp_json_data['list']\nE       KeyError: 'list'\n\nTestQS\\configure_device\\test_configure_device.py:89: KeyError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'list'",
    "statusTrace" : "self = <TestQS.configure_device.test_configure_device.Test_info object at 0x043A1830>\n\n    @allure.severity(\"critical\")\n    @allure.story(\"用户登录\")\n    def test_login(self):\n        login_resp = request.post_request(url=url1 + '/api/user/public/pwd/login',\n                                          json={\"subject\": \"13800010001\", \"password\": \"123456\"})\n    \n        # 通过状态码进行判断\n        assertions.assert_code(login_resp.status_code, 200)\n    \n        # 提取响应正文\n        login_resp_json = login_resp.json()\n    \n        # 通过响应正文进行对比判断\n        assertions.assert_in_text(login_resp_json['resMsg'], 'success')\n    \n        # 提取token\n        data_json = login_resp_json['data']\n        # # 重新赋值全局变量 head\n        global head\n        head = {'console-token': data_json['consoleToken']}\n    \n    # @allure.severity(\"critical\")\n    # @allure.story(\"添加设备\")\n    # def test_add_device(self):\n    #     # 需重构\n    #     \"\"\"\n    #     add_device_resp = request.post_request(url=url1 + '/api/device/console/device/info/add',\n    #                                       json ={\"enteId\":32,\"deptId\":98,\"address\":\"沈杜公路1000弄\",\n    #                                              \"appVersion\":\"3.0\",\"batchCode\":\"2020-11\",\"provinceId\":9,\n    #                                              \"cityId\":104,\"countyId\":1134,\"townId\":13787,\n    #                                              \"centerId\":1000022,\"communityId\":3000007,\n    #                                              \"deviceVersion\":\"1.0\",\"emergencyContactUserId\":351,\n    #                                              \"gasNumber\":\"123456\",\"lat\":39.910925,\"lon\":116.413384,\n    #                                              \"macCode\":maccode,\"netType\":\"1,2,3\",\"remark\":\"\",\"romVersion\":\"1\",\n    #                                              \"title\":title,\"phone\":\"17323926305\",\"time\":\"2020-11-23 00:00:00\",\n    #                                              \"villageName\":\"中金海棠湾居委会\"},headers=head)\n    #\n    #     assertions.assert_code(add_device_resp.status_code,200)\n    #\n    #     add_device_resp_json = add_device_resp.json()\n    #\n    #     assertions.assert_in_text(add_device_resp_json['resMsg'],'success')\n    #     \"\"\"\n    #\n        # 将携带的参数传给params\n        a = {\"page\" : 1 , \"size\" : 10 , \"fuzzy\" : title}\n    \n        query_device_info_resp = request.get_request(url=url1 +\"/api/device/console/device/info/query/CombinationQuery\",\n                                                    params= a, headers=head)\n        # 通过状态码进行判断\n        assertions.assert_code(query_device_info_resp.status_code,200)\n    \n        # 提取响应正文\n        query_device_info_resp_json = query_device_info_resp.json()\n    \n        # 通过响应正文进行对比判断\n        assertions.assert_in_text(query_device_info_resp_json['resMsg'],'success')\n    \n        # 获取josn中data\n        query_device_info_resp_json_data = query_device_info_resp_json['data']\n    \n        # 获取data中的list\n>       query_device_info_resp_json_data_list = query_device_info_resp_json_data['list']\nE       KeyError: 'list'\n\nTestQS\\configure_device\\test_configure_device.py:89: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "74bb15ab9ef10d76",
      "name" : "请求",
      "source" : "74bb15ab9ef10d76.txt",
      "type" : "text/plain",
      "size" : 296
    }, {
      "uid" : "8743d8868b7240d0",
      "name" : "响应",
      "source" : "8743d8868b7240d0.txt",
      "type" : "text/plain",
      "size" : 844
    }, {
      "uid" : "c8a7998e91d23221",
      "name" : "请求",
      "source" : "c8a7998e91d23221.txt",
      "type" : "text/plain",
      "size" : 837
    }, {
      "uid" : "e1040587bb97f404",
      "name" : "响应",
      "source" : "e1040587bb97f404.txt",
      "type" : "text/plain",
      "size" : 489
    }, {
      "uid" : "551abd1c97406937",
      "name" : "log",
      "source" : "551abd1c97406937.txt",
      "type" : "text/plain",
      "size" : 3425
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 5,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "配置设备"
  }, {
    "name" : "story",
    "value" : "用户登录"
  }, {
    "name" : "parentSuite",
    "value" : "TestQS.configure_device"
  }, {
    "name" : "suite",
    "value" : "test_configure_device"
  }, {
    "name" : "subSuite",
    "value" : "Test_info"
  }, {
    "name" : "host",
    "value" : "DESKTOP-43Q8N5G"
  }, {
    "name" : "thread",
    "value" : "5388-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestQS.configure_device.test_configure_device"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "5291051321b3b2bc.json",
  "parameterValues" : [ ]
}